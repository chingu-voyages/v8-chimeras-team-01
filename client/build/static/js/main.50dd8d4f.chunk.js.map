{"version":3,"sources":["../node_modules/peerjs/dist sync","components/Results/Results.js","components/Questions/Answer/Answer.js","components/Loader/Loader.js","components/Questions/Questions.js","components/LeaderBoard/LeaderBoard.js","components/Games/BrowseGames.js","components/Landing/Landing.js","components/Instructions/Instructions.js","components/Games/Games.js","components/Nav/Nav.js","History.js","components/Host/GetStarted/GetStarted.js","components/Host/NextQuestion/NextQuestion.js","components/Host/Host.js","components/Player/Join/Join.js","components/Player/Player.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Results","_ref","sortedUsers","list","i","sortable","topThree","key","console","log","push","sort","a","b","userName","score","users","react_default","createElement","className","react_router_dom","to","Answer","handleChoice","correct","answer","concat","onClick","event","Loader","src","alt","Questions","updateMyScore","myScore","sendAnswer","question","onQ","totalQ","updateHost","handleIncrementQ","pushLocation","playersUpdated","readyLeaderBoard","goLeaderboard","useEffect","timeInterval","setInterval","timer","clearInterval","_useState","useState","_useState2","Object","slicedToArray","localScore","setLocalScore","_useState3","_useState4","setCorrect","_useState5","_useState6","setAnswer","preventClicks","updatedScore","time","_useState7","_useState8","setTime","document","querySelector","classList","add","target","allAnswers","getElementsByClassName","toConsumableArray","forEach","element","Fragment","q","map","c","Answer_Answer","LeaderBoard","props","orderedList","length","sortUsers","user","index","hostReady","nextQuestion","BrowseGames","showGames","handleToggleGames","name","image","desc","gameList","setgameList","_fetchQuestions","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","category","abrupt","stop","apply","this","arguments","fetchQuestions","Landing","view","setView","buttonSwitch","selection","toggleInfo","boolean","toggle","setShowGames","toggleGames","Instructions","getStarted","userNames","Games","handleSetGame","setGameTwo","description","questions","game","handleSelectGame","Nav_Nav","createBrowserHistory","GetStarted","handleGetStarted","NextQuestion","goNextQuestion","Host","state","peer","Peer","debug","conn","players","me","currentQ","chosenAnswer","readyResults","whichGame","initialize","_this","on","setState","ready","reconnect","err","handleReceivedData","playerArray","filter","obj","open","catchOthers","individualResults","updateResults","initialMe","initiateUsers","initiateHostUsers","username","scoreObj","defineProperty","updatePlayersScores","usersObject","send","path","history","incrementQ","cQ","setGame","objectSpread","readyToSend","clearUsers","handleLeaderBoardTransition","handleUsername","preventDefault","value","sendUserObject","unreadyLeaderBoard","goResults","copyToClipboard","text","getElementById","innerText","trim","navigator","clipboard","writeText","then","alert","_this2","onSubmit","type","placeholder","react_router","render","Games_Games","assign","Instructions_Instructions","GetStarted_GetStarted","Questions_Questions","LeaderBoard_LeaderBoard","Results_Results","class","Component","Join","setUserName","connectionID","setConnectionID","onChange","_ref2","required","handleConnection","updateUsername","Player","isConnected","input","sendChosenAnswer","msg","connect","reliable","finishConnections","firstMe","destroy","updateUsersObject","loadQuestions","myName","res","ok","Promise","reject","statusText","catch","_this3","App","exact","component","href","rel","Boolean","window","location","hostname","match","ReactDOM","src_App_0","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.50dd8d4f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 54;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\nexport default function Results({ users }) {\n  /* SORT LEADERS */\n\n  /**\n   * @function [topThree]\n   * @param {Objects} list Objects containing only key and value as a number\n   * @description [Takes in users and returns the top 3 players by descending order]\n   * @returns {Object[]} Top three players with userName and score as key.\n   */\n  const topThree = function (list) {\n    const sortable = [],\n      topThree = [];\n\n    // Put keys and value into an array of arrays\n    for (let key in list) {\n      console.log(key);\n      console.log(list);\n      sortable.push([key, list[key]]);\n    }\n\n    // Sort array by value, highest to low\n    sortable.sort(function (a, b) {\n      return a[1] > b[1] ? -1 : a[1] < b[1] ? 1 : 0;\n    });\n\n    // return just the first 3 items in the array of objects\n    let i;\n    for (i = 0; i < 3; i += 1) {\n\n      const userName = sortable[i] ? sortable[i][0] : 'N/A';\n      const score = sortable[i] ? sortable[i][1] : 0;\n\n      topThree.push({\n        userName,\n        score\n      });\n    }\n\n    return topThree;\n  };\n\n  const sortedUsers = topThree(users);\n\n  return (\n    <div id=\"results\">\n      <div className=\"res__header\" />\n      <div className=\"res__container\">\n        <h1 className=\"res__title\">\n          Nice work {sortedUsers[0].userName}!\n          <br />\n          Time to BRAG\n        </h1>\n        <div className=\"res__wrapper\">\n          <div className=\"res__bar\">\n            <span className=\"res__bar_names\">{sortedUsers[1].userName}</span>\n            <div className=\"res__bar-inner\" />\n          </div>\n          <div className=\"res__bar\">\n            <span className=\"res__bar_names\">{sortedUsers[0].userName}</span>\n            <div className=\"res__bar-inner\" />\n          </div>\n          <div className=\"res__bar\">\n            <span className=\"res__bar_names\">{sortedUsers[2].userName}</span>\n            <div className=\"res__bar-inner\" />\n          </div>\n        </div>\n      </div>\n      <button className=\"res__btn\">\n        <Link to=\"/\" className=\"res__btn-anchor\">\n          <p className=\"res__anchor_txt\">Time for another game?</p>\n        </Link>\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.css';\n\nexport default function Answer({ handleChoice, correct, answer }) {\n    return (\n        <div className={`box ${correct}`}\n            onClick={(event) => handleChoice(event, correct, answer)}\n        >\n            {answer}\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Loader() {\n    return (\n        <div>\n            <img src='/images/loader.gif' alt='loader'></img>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport Answer from './Answer';\nimport './index.css';\nimport Loader from '../Loader';\n\nexport default function Questions({ updateMyScore, myScore, sendAnswer, question, onQ, totalQ, handleIncrementQ, pushLocation, playersUpdated, updateHost, readyLeaderBoard, goLeaderboard }) {\n\n\n  /**\n   * [useEffect Hook]\n   * @method  timeInterval\n   * @description  [Hook to start/stop timer on mount/unmount]\n   * @return {function} [Cleans up on un-mount by clearing interval]\n   */\n  useEffect(() => {\n    const timeInterval = setInterval(() => timer(), 1000)\n    return () => {\n      clearInterval(timeInterval);\n    }\n  })\n\n  const [localScore, setLocalScore] = useState(myScore);\n  const [correct, setCorrect] = useState('wrong');\n  const [answer, setAnswer] = useState('');\n\n\n  const handleChoice = (event, correct, answer) => {\n    preventClicks(event);\n    setCorrect(correct);\n    setAnswer(answer);\n    let updatedScore = 0\n    if (correct === \"correct\") {\n      updatedScore = localScore + (5 * time);\n    } else {\n      updatedScore = localScore;\n    }\n    setLocalScore(updatedScore);\n    updateMyScore(updatedScore)\n  }\n\n  /**\n   * [time Hook]\n   * @method time\n   * @description [Hook to set initial time in timer and method to update that count]\n   */\n  const [time, setTime] = useState(10);\n\n\n  /**\n   * [isLastQ]\n   * @param  [Holds boolean, true if this is the last quesiton in the array, false otherwise]\n   * @return {Boolean}\n   */\n  const isLastQ = (onQ === totalQ) ? true : false;\n\n  /**\n   * @function highlightCorrect [Highlights Answer marked as correct]\n   */\n  const highlightCorrect = () => {\n    let correct = document.querySelector('.correct');\n    correct.classList.add('highlight');\n  }\n\n\n  /**\n   * @function timer [Decrements the time in state and pushes to Leaderboard URL except last question, then pushes to Results URL]\n   */\n  const timer = () => {\n    if (time === 0) {\n      let newTime = (time - 1);\n      setTime(newTime);\n\n      // Highlighting the correct answer\n      highlightCorrect();\n\n      // send answers to host regardless\n      sendAnswer(correct, answer, localScore)\n\n    } else if (time === -15) {\n      updateHost();\n\n      let newTime = (time - 1);\n      setTime(newTime);\n\n    } else {\n      let newTime = (time - 1);\n      setTime(newTime);\n    }\n\n  }\n\n  /* Once user clicks answer, prevent more answers from being chosen */\n  /**\n   * @function preventClicks [finds all Answers and prevents further clicks]\n   */\n  const preventClicks = (e) => {\n    e.target.classList.add('selected');\n\n    let allAnswers = document.getElementsByClassName('box');\n    [...allAnswers].forEach(element => element.classList.add('no-clicks'));\n  }\n\n  return (\n\n    <div id=\"questions\">\n      <h1 className=\"questions__title text-center\">Question {onQ} of {totalQ} </h1>\n\n      <div className='image-wrapper'>\n        {time <= 0 ? <Loader /> :\n          <>\n            <img className='outline image-question' alt='of question' src='https://picsum.photos/200'></img>\n            <div className=\"question__timer\">Timer {time}</div>\n          </>\n\n        }\n      </div>\n\n      <div className='text-center'>\n        <h2 className='question__display'>{question.q}</h2>\n      </div>\n\n      <div className='answers-wrapper'>\n        {\n          question.a.map((answer, i) => {\n            if (answer !== question.c) {\n              return <Answer correct={'wrong'}\n                answer={answer}\n                handleChoice={handleChoice}\n                key={i} />;\n            } else {\n              return <Answer correct={'correct'}\n                answer={answer}\n                handleChoice={handleChoice}\n                key={i} />;\n            }\n          })\n        }\n      </div>\n\n    </div >\n  )\n}\n","import React, { useEffect } from \"react\";\nimport \"./index.css\";\n\nexport default function LeaderBoard(props) {\n  /* SORT LEADERS */\n\n  /**\n * [useEffect Hook]\n * @method  handleIncrementQ\n * @description  [Hook to move to next question when Questions re-mounts]\n */\n  useEffect(() => {\n    props.handleIncrementQ();\n  }, []);\n\n  /**\n   * @function [sortUsers]\n   * @param {Objects} list Objects containing only keys and value as a number\n   * @description [Takes in users and returns players by descending order]\n   * @returns {Object[]} All players with userName and score as keys and values to names and scores.\n   */\n  const sortUsers = function (list) {\n    const sortable = [],\n      orderedList = [];\n\n    // Put keys and value into an array of arrays\n    for (let key in list) {\n      sortable.push([key, list[key]]);\n    }\n\n    // Sort array by value,\n    sortable.sort(function (a, b) {\n      return a[1] > b[1] ? -1 : a[1] < b[1] ? 1 : 0;\n    });\n\n    // Return array of objects\n    let i;\n    for (i = 0; i < sortable.length; i += 1) {\n      orderedList.push({\n        userName: sortable[i][0],\n        score: sortable[i][1]\n      });\n    }\n\n\n    return orderedList;\n  };\n\n  const { users } = props;\n  const sortedUsers = sortUsers(users)\n\n  return (\n    <div id=\"leaderBoard\">\n      <div className=\"lb__container\">\n        <h1 className=\"lb__title\">Leader Board</h1>\n        <ol className=\"lb__ol\">\n          {sortedUsers.map((user, index) => (\n            <li className=\"lb__li\" key={index}>\n              <mark>{user.userName}</mark>\n              <small>{user.score}</small>\n            </li>\n          ))}\n        </ol>\n      </div>\n      <div className=\"lb__banner\">\n        <p className=\"lb__inspire_txt\">\n          Not being in first place just means you have a clear target\n        </p>\n      </div>\n\n      {!!props.hostReady && props.nextQuestion}\n\n    </div >\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function BrowseGames({ showGames, handleToggleGames }) {\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  const [gameList, setgameList] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      image: <i className=\"fas fa-stroopwafel fa-6x\"></i>,\n      desc: \"What you know 'bout Waffles??\",\n    }\n  ]);\n\n  useEffect(() => {\n    async function fetchQuestions() {\n    const response = await fetch('/api/questions');\n    const data = await response.json();\n    console.log(data[0].category);\n    return setgameList({\n      id: data[0].id,\n      name: data[0].category,\n      image: <i className=\"fas fa-stroopwafel fa-6x\"></i>,\n      desc: \"What you know 'bout Waffles??\"\n    })\n  }\n    fetchQuestions(); \n  }, []);\n\n  return (\n    <section className={!!showGames ? 'games show-games' : \"games\"} >\n      <button className=\"games-close pm0 pointy\"\n              onClick={() => {handleToggleGames(false)}}> X close </button>\n            <h1>Browse Available Challenges.</h1>\n      <div className=\"games-container\">\n          <article className=\"game-tile\" key={gameList.id} >\n            <div className=\"gt-image fbc pm0\">{gameList.image}</div>\n            <div className=\"gt-description pm0\">\n              <h4>{gameList.name}</h4>\n              <p>{gameList.desc}</p>\n            </div>\n          </article>\n      </div>\n    </section>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport BrowseGames from '../Games/BrowseGames.js';\nimport './index.css';\n\nexport default function Landing() {\n\n  /**\n   * @method [useState(view)]\n   * @description [Creates and sets state for which view is being displayed. This dictates which view is shown and which button is 'chosen']\n   */\n  const [view, setView] = useState(\"info\");\n\n  /**\n   * @function [buttonSwitch]\n   * @param {string} selection\n   * @description [Changes which view button has sel based on view in state. Used in onClick on icons. VIEW CHANGED ADD/REMOVING CLASSES THROUGH TERNARIES AT CLASSNAMES IN JSX BELOW]\n   */\n  const buttonSwitch = (selection) => {\n    if (selection !== view) {\n      setView(selection);\n    };\n  }\n\n  /**\n   * @function [toggleInfo]\n   * @description [show/hide info drop down on when screen is larger than 600px]\n   */\n  const toggleInfo = (boolean) => {\n    let geContainer = document.getElementsByClassName(\"ge-container\");\n    geContainer[0].classList.toggle(\"shift-up\");\n  }\n\n  /**\n   * @method [useState(showGames)]\n   * @description [Create and change state to show/hide Games component]\n   */\n  const [showGames, setShowGames] = useState(false);\n\n  /**\n   * @function [toggleGames]\n   * @param {boolean} boolean\n   * @description [Trigger show/hide of Games component]\n   */\n  const toggleGames = (boolean) => {\n    if (boolean !== showGames) {\n      setShowGames(boolean);\n    }\n  }\n\n  return (\n    <section id=\"landing pm0\">\n      <i className=\"fas fa-info-circle fa-2x pointy lrg-scrn-icon\"\n        onClick={toggleInfo}></i>\n\n      <section id=\"view-button-container\" className=\"pm0\">\n        <div className={(view === \"info\") ? \"button-box fbc sel\" : \"button-box fbc\"}>\n          <i className=\"fas fa-info-circle fa-3x\"\n            onClick={() => { buttonSwitch(\"info\") }}></i>\n        </div>\n        <div className={(view === \"game\") ? \"button-box fbc sel\" : \"button-box fbc\"}>\n          <i className=\"fas fa-gamepad fa-3x\"\n            onClick={() => { buttonSwitch(\"game\") }}></i>\n        </div>\n      </section>\n\n      <section className=\"view-container pm0\">\n\n        {/* TERNARY to show/hide in mobile view */}\n        <div className={(view === \"info\") ? \"ge-container pm0 shift-up\" : \"ge-container pm0 shift-left shift-up\"}>\n          <button className=\"info-close pm0 pointy\"\n            onClick={toggleInfo}> X close </button>\n          <div className=\"gameplay-example\">\n            <div className=\"fbc\">\n              <h4 className=\"ge-header fbc\">How do I earn Bragging Rights?</h4>\n            </div>\n            <div className=\"ge-box b-s pm0 geb1\">\n              <div className=\"ge-description b-s fbc\">Setup a game with a few clicks</div>\n            </div>\n            <div className=\"ge-box b-s pm0 geb2\">\n              <div className=\"ge-description b-s fbc\">Answer the questions as they come</div>\n            </div>\n            <div className=\"ge-box b-s pm0 geb3\">\n              <div className=\"ge-description b-s fbc\">See who won Bragging Rights</div>\n            </div>\n          </div>\n        </div>\n\n        {/* TERNARY to show/hide in mobile view */}\n        <section className={(view === \"game\") ? \"start-game-container pm0\" : \"start-game-container pm0 shift-right\"}>\n          <div className=\"start-game-section fbc\">\n            <h4 className=\"fbc\">Quick Launch</h4>\n            <Link to=\"/host/games\" className=\"link fbc\">\n              <button className=\"start-game-button fbc pointy\">\n                <p className=\"pm0\"><strong>Are you a GameMaster??</strong></p>\n                <p className=\"pm0\">Host A Game</p>\n              </button>\n            </Link>\n            <Link to=\"/player/join\" className=\"link fbc\">\n              <button className=\"start-game-button fbc pointy\">\n                <p className=\"pm0\"><strong>Have a Code??</strong></p>\n                <p className=\" pm0\">Join A Game</p>\n              </button>\n            </Link>\n            <button className=\"browse-button fbc pointy\"\n              onClick={() => { toggleGames(true) }}>\n              <p className=\"pm0\">Browse Games</p>\n            </button>\n          </div>\n\n          <div className=\"hth-container pm0\">\n            <div className=\"how-to-host\">\n              <h4 className=\"hth-header pm0 fbc\">Want to Host a Game?</h4>\n              <div className=\"how-to-box htb1 b-s\">\n                <span className=\"htb-num\">1</span>\n                <p>Choose \"GameMaster\" Option Above</p>\n              </div>\n              <div className=\"how-to-box htb2 b-s\">\n                <span className=\"htb-num\">2</span>\n                <p>Select A Game</p>\n              </div>\n              <div className=\"how-to-box htb3 b-s\">\n                <span className=\"htb-num\">3</span>\n                <p>Invite Friends!</p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <BrowseGames showGames={showGames}\n          handleToggleGames={toggleGames} />\n\n      </section>\n\n    </section>\n  )\n}\n","import React from 'react';\nimport './index.css';\n\nexport default function Instructions({ getStarted, users }) {\n\n  const userNames = Object.keys(users);\n\n\n  return (\n\n    <div className=\"instructions\" id=\"instructions\">\n      <h1 className=\"instructions-header text-center\">A quick \"How-To\" while we get your game ready</h1>\n      <div className=\"steps-wrapper\">\n        <h2 className=\"steps-title text-center\">3 simple steps to play</h2>\n        <ol className=\"steps-list\">\n          <li className=\"step1\">\n            <p className=\"step1-instructions\">Read the question and choose the RIGHT answer - [Hint: fastest gets MORE POINTS!]</p>\n          </li>\n          <li className=\"step2\">\n            <p className=\"step2-instructions\">When the timer expires, confirm you had the right answer<br />(have a list of excuses ready incase you didn't)</p>\n          </li>\n          <li className=\"step3\">\n            <p className=\"step3-instructions\">Check your place on the Leaderboard</p>\n          </li>\n        </ol>\n      </div>\n      <div className=\"join-board\">\n        <div className=\"players-that-joined\">\n          <h2 className=\"steps-title text-center\">Players</h2>\n          <ol className=\"player-list pm0 step__ol\">\n            {(userNames.length > 0) ?\n              userNames.map( (name, index) => (\n                <li className=\"step__li\" key={index}>\n                  <mark>{name}</mark>\n                  <small>0</small>\n                </li>\n              ))\n              :\n              <li>No one but you here so far...</li>\n            }\n          </ol>\n        </div>\n      </div>\n      <div className=\"instruction-btn\">\n        {getStarted}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nexport default function Games({ showGames, handleSetGame, pushLocation, setGameTwo }) {\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  const [gameList, setgameList] = useState([\n    {\n      id: \"1\",\n      description: \"\",\n      image: \"\",\n      category: \"\",\n      questions: [],\n    },\n    {\n      id: \"2\",\n      description: \"\",\n      image: \"\",\n      category: \"\",\n      questions: [],\n    },\n  ]);\n\n  useEffect( () => {\n    async function fetchQuestions() {\n    const response = await fetch('/api/questions');\n    const data = await response.json();\n    console.log( data[1]);\n\n    return setgameList(data);\n  }\n    fetchQuestions();\n  }, []);\n\n  const handleSelectGame = (game) => {\n    handleSetGame(game);\n    pushLocation(\"/host/instructions\");\n  }\n\n  return (\n    <section className={!!showGames ? 'games show-games' : \"games\"} >\n      <h1>Choose your challenge</h1>\n      <div className=\"games-container\">\n      {gameList.map(game => (\n          <article className=\"game-tile pointy\"\n                   key={game.id}\n                   onClick={() => {handleSelectGame(game)}} >\n            <div className=\"gt-image fbc pm0\"><img className=\"game-image\"src={game.image} alt=\"\"></img></div>\n            <div className=\"gt-description pm0\">\n              <h4>{game.category}</h4>\n              <p>{game.description}</p>\n            </div>\n          </article>\n        ))}\n      </div>\n    </section>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\n\nexport default () => (\n    <div id='nav'>\n        <header>\n          <Link to=\"/\" className=\"pointy\">\n            <h1 className=\"header pm0\">Bragging Rights</h1>\n          </Link>\n          <h4 className=\"sub-header pm0\">Outwit your friends and earn <em>Bragging Rights</em></h4>\n        </header>\n    </div>\n)\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory()\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\nexport default function GetStarted({ handleGetStarted }) {\n    return (\n        <Link to=\"/host/questions\" className=\"link fbc\">\n            <button\n              className=\"start-game-btn\"\n              onClick={()=>handleGetStarted()}>\n                <p className=\"start-game_txt\">Let's Get Started !!</p>\n            </button>\n        </Link>\n    )\n}\n","import React from 'react';\n\nexport default function NextQuestion({ goNextQuestion }) {\n    return (\n            <button className=\"lb__btn\"\n                    onClick={goNextQuestion}\n            >\n                <p className=\"lb__anchor_txt\">Next Question</p>\n            </button>\n    )\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from '../../History.js';\nimport Peer from 'peerjs';\nimport Questions from '../Questions';\nimport Games from '../Games';\nimport Instructions from '../Instructions';\nimport LeaderBoard from '../LeaderBoard';\nimport Results from '../Results';\n\nimport GetStarted from './GetStarted';\nimport NextQuestion from './NextQuestion';\n\n\nimport './index.css';\n\n/**\n * @class Host\n * @extends {Component}\n */\nclass Host extends Component {\n\n  /**\n  * @property { Object } me - User in this instance of game.\n  * @property { Array } users - Array of user objects.\n  * @property { Array } questions - Array of questions and answers.\n  * @property { Array }  answers - An array of possible answers.\n  * @property { Number } currentQ - Index of current question.\n  * @property { Number } time - How many seconds to set timer.\n  * @property { String } chosenAnswer - String holding chosen answer.\n  *\n  */\n\n  state = {\n    peer: new Peer(null, {\n      debug: 2\n    }),\n    conn: null,\n    players: [],\n    id: '',\n    playersUpdated: false,\n    me: null,\n    users: {},\n    questions: [],\n    currentQ: 0,\n    chosenAnswer: '',\n    readyLeaderBoard: false,\n    readyResults: false,\n    whichGame: ''\n  }\n\n\n\n\n  // Connection functions\n  componentDidMount() {\n    this.initialize();\n  }\n\n  componentDidUpdate() {\n\n    if (this.state.readyToSend === true) {\n      this.sendUserObject();\n      this.setState({ readyToSend: false });\n    }\n\n  }\n\n  initialize = () => {\n\n    this.state.peer.on('open', (id) => {\n      console.log(\"ID: \" + this.state.peer.id);\n      this.setState({ id })\n\n    });\n\n    this.state.peer.on('connection', (c) => {\n      console.log(c)\n      this.setState({ conn: c });\n      let players = [...this.state.players];\n      players.push(this.state.conn);\n      this.setState({ players });\n      console.log(\"Connected to: \" + this.state.conn.peer);\n      this.ready()\n      console.log(this.state.players);\n    });\n\n    this.state.peer.on('disconnected', () => {\n      //handle connection message\n      console.log(\"Connection lost. Please reconnect\");\n      this.state.peer.reconnect();\n    });\n\n    this.state.peer.on('close', () => {\n      this.setState({ conn: null });\n      console.log('Connection destroyed');\n    });\n\n    this.state.peer.on('error', (err) => {\n      console.log(err);\n    })\n  }\n\n  ready = () => {\n    this.state.conn.on('data', (data) => {\n      this.handleReceivedData(data);\n      console.log(\"Data received: \", data);\n    })\n\n    this.state.conn.on('close', () => {\n      console.log(\"connection reset, awaiting connection...\");\n      let playerArray = this.state.players.filter( obj => obj.open);\n      this.setState({ players : playerArray });\n      this.setState({ conn: null });\n    })\n  }\n\n\n  handleReceivedData = (data) => {\n    switch (data) {\n\n      default:\n        this.catchOthers(data);\n        break;\n    };\n  }\n\n  catchOthers = (data) => {\n    if (data.individualResults) {\n      this.updateResults(data);\n    } else if (data.initialMe) {\n      this.initiateUsers(data);\n    }\n  }\n  //End connection functions\n\n\n  // Initialize  Host And Players\n  initiateHostUsers = () => {\n    let username = this.state.me.userName;\n    let scoreObj = { [username]: this.state.me.myScore };\n    this.setState({ users: scoreObj });\n  }\n\n  initiateUsers = (data) => {\n    this.updatePlayersScores(data.initialMe.userName, data.initialMe.myScore);\n    this.state.players.forEach(conn => {\n      let obj = { usersObject: this.state.users };\n      conn.send(obj);\n      console.log(\"sent users object\", obj);\n    });\n    this.state.players.forEach(conn => {\n      let whichGame = { whichGame: this.state.whichGame };\n      conn.send(whichGame);\n      console.log(\"sent whichGame object\", whichGame);\n    });\n  }\n  // End Initialize Host And Players functions\n\n\n\n  /* PUSH URL */\n  /**\n   * @function pushLocation\n   * @arg {String}\n   * @description [Takes in a string that will be pushed as a URL path in the history stack, making the app 'navigate' to that URL and mount any corrosponding components.]\n   */\n  pushLocation = (path) => {\n    history.push(`${path}`);\n  };\n\n  /* Increment Current Q */\n  /**\n   * @function incrementQ\n   * @description [Takes in number representing index of current question in questions array and adds one, in order to get next question in array.]\n   */\n  incrementQ = () => {\n    let cQ = this.state.currentQ;\n    this.setState({ currentQ: (cQ + 1) })\n  }\n\n  /* Set Game */\n  /**\n   * @function setGame\n   * @description [Takes in questions and answers from game selected in Games component and places them in the questions array in state.]\n   */\n  setGame = (game) => {\n    // To Do Clear all players and host scores\n    this.setState({ questions: game.questions });\n    this.setState({ whichGame: game.id});\n  }\n\n  /**\n   * @method sendAnswer - Function used to send computed answer to the Host.\n   *\n   * @memberof Questions\n   */\n  sendAnswer = (correct, answer) => {\n    // if there are no players connected, single player mode\n    //show leaderboard push button\n    // if last questions run\n    if (this.state.players.length === 0) {\n\n      if (this.state.questions.length === this.state.currentQ + 1) {\n        this.setState({ readyResults: true })\n      } else {\n        this.setState({ readyLeaderBoard: true });\n      }\n\n      console.log(\"readyLeaderBoard\");\n\n      //update own score in users object\n      this.initiateHostUsers();\n\n    }\n\n    console.log(\"sendAnswer\");\n\n  }\n\n  updateResults = (data) => {\n\n    this.updatePlayersScores(data.individualResults.userName, data.individualResults.myScore);\n\n    //check if all results are received on initial join\n    if (Object.keys(this.state.users).length === this.state.players.length) {\n      //trigger host update users with own score\n      //by setting playersUpdated to true\n      // this.setState({ playersUpdated: true });\n      this.updateHost();\n      console.log(\"players updated\");\n    }\n  }\n\n  updateHost = () => {\n\n    this.setState({\n      users: {\n        ...this.state.users,\n        [this.state.me.userName]: this.state.me.myScore,\n      },\n    });\n    this.setState({ playersUpdated: false });\n\n    this.setState({ readyToSend: true });\n  }\n\n  updatePlayersScores = (user, score) => {\n    this.setState({\n      users: {\n        ...this.state.users,\n        [user]: score,\n      },\n    });\n    console.log(this.state.users);\n  }\n\n\n  clearUsers = () => {\n    this.setState({ users: {} })\n  }\n\n  handleLeaderBoardTransition = () => {\n\n    this.state.players.forEach(conn => {\n      conn.send(\"go Leaderboard\");\n    });\n\n  }\n\n  handleGetStarted = () => {\n\n    this.state.players.forEach(conn => {\n      conn.send(\"start\");\n    });\n    this.clearUsers();\n\n  }\n\n  handleUsername = (e) => {\n    e.preventDefault();\n    let myName = e.target.userName.value;\n    let obj = { myScore: 0, userName: myName }\n    this.setState({ me: obj }, () => this.initiateHostUsers());\n\n  }\n\n  updateMyScore = (score) => {\n    var obj = { myScore: score, userName: this.state.me.userName }\n    this.setState({ me: obj })\n  }\n\n  sendUserObject = () => {\n\n    this.state.players.forEach(conn => {\n      let obj = { usersObject: this.state.users };\n      conn.send(obj);\n      this.setState({ readyToSend: false });\n      console.log(\"sent users object\", obj);\n    });\n\n\n    this.readyLeaderBoard();\n\n    console.log(\"sendUserObject\");\n  }\n\n  goNextQuestion = () => {\n    this.state.players.forEach(conn => {\n      conn.send(\"go Next Question\");\n    });\n    this.pushLocation(\"/host/questions\");\n    this.clearUsers();\n  }\n\n  readyLeaderBoard = () => {\n    if (this.state.questions.length === this.state.currentQ + 1) {\n      this.setState({ readyResults: true })\n    } else {\n      this.setState({ readyLeaderBoard: true });\n    }\n  }\n\n  goLeaderboard = () => {\n    this.state.players.forEach(conn => {\n      conn.send(\"go Leaderboard\");\n    });\n    this.pushLocation(\"/host/leaderboard\");\n    this.unreadyLeaderBoard();\n  }\n\n  goResults = () => {\n    this.state.players.forEach(conn => {\n      conn.send(\"Game Over\");\n    });\n\n    this.pushLocation(\"/host/results\");\n    this.unreadyLeaderBoard();\n  }\n\n  unreadyLeaderBoard = () => {\n    this.setState({ readyLeaderBoard: false, readyResults: false });\n    console.log(\"unreadyLeaderBoard\");\n  }\n\n  /**\n   * @function copyToClipboard\n   * @description [copies selection to clipboard.]\n   */\n  copyToClipboard = (target) => {\n    let text = document.getElementById(target).innerText.trim();\n    navigator.clipboard.writeText(text).then(() => {\n      alert(\"Copied!\");\n    });\n\n  }\n\n  render() {\n\n    return (\n      <div id=\"host-container\">\n\n        <section className=\"host-header\">\n          {\n            this.state.me ?\n              <h3> User Name: <span className=\"orange\">\n                {this.state.me.userName}\n              </span></h3> :\n              <div id=\"host-userName-form\" className=\"fbc\">\n                <form className=\"fbc\"\n                  onSubmit={this.handleUsername}>\n                  <input type=\"text\"\n                    className=\"huf-input\"\n                    name=\"userName\"\n                    placeholder='What should we call you?' />\n                  <button type='submit'\n                    className=\"huf-button pointy\">Submit</button>\n                </form>\n              </div>\n          }\n\n          <h3>Game ID:\n            <span className=\"orange pointy\"\n              id=\"game-id\"\n              onClick={() => { this.copyToClipboard(\"game-id\") }}> {this.state.id}\n            </span></h3>\n          <h3 className=\"hh-subtext pm0\">click to copy, share so friends can join</h3>\n        </section>\n\n        <br />\n\n        <Switch>\n\n          <Route path=\"/host/games\"\n            render={(props) =>\n              <Games {...props}\n                showGames={true}\n                handleSetGame={this.setGame}\n                pushLocation={this.pushLocation} />\n            } />\n\n          <Route path=\"/host/instructions\"\n            render={() => <Instructions\n              getStarted={<GetStarted handleGetStarted={this.handleGetStarted} />}\n              users={this.state.users} />}\n          />\n\n          <Route path=\"/host/questions\"\n            render={(props) =>\n              <Questions {...props}\n                question={this.state.questions[this.state.currentQ]}\n                onQ={this.state.currentQ + 1}\n                totalQ={this.state.questions.length}\n                pushLocation={this.pushLocation}\n                sendAnswer={this.sendAnswer}\n                myScore={this.state.me.myScore}\n                updateMyScore={this.updateMyScore}\n                updateHost={this.updateHost}\n                playersUpdated={this.state.playersUpdated}\n                goLeaderboard={this.goLeaderboard}\n                readyLeaderBoard={this.state.readyLeaderBoard}\n              />\n            } />\n\n          <Route path=\"/host/leaderboard\"\n            render={(props) =>\n              <LeaderBoard {...props}\n                users={this.state.users}\n                hostReady={true}\n                handleIncrementQ={this.incrementQ}\n                nextQuestion={<NextQuestion\n                  goNextQuestion={this.goNextQuestion}\n                />}\n\n              />\n            } />\n\n          <Route path=\"/host/results\"\n            render={(props) =>\n              <Results {...props}\n                users={this.state.users} />\n            } />\n\n        </Switch>\n        {(!!this.state.readyLeaderBoard) && <button class=\"host-next__btn\" onClick={this.goLeaderboard}>go leaderboard</button>}\n        {(!!this.state.readyResults) && <button class=\"host-next__btn\" onClick={this.goResults}>go results</button>}\n\n      </div >\n\n    )\n  }\n}\n\nexport default Host;\n","import React, { useState } from 'react';\n\nexport default function Join(props) {\n\n    const [userName, setUserName] = useState('');\n    const [connectionID, setConnectionID] = useState('');\n\n    /* Form inputs are pushed up into this.state.entry so that React has total control of the data */\n\n    const handleConnectionInput = ({ target }) => setConnectionID(target.value);\n    const handleUserName = ({ target }) => setUserName(target.value);\n\n\n\n    return (\n        <div id='join'>\n            <div className=\"join__container\">\n                <h1 className=\"join__title\">Join A Game</h1>\n                <div className=\"join__wrapper\">\n\n                    <h3>What shall we call you?</h3>\n                    <input type=\"text\"\n                        className=\"join__input\"\n                        name=\"username\"\n                        value={userName}\n                        onChange={handleUserName}\n                        placeholder=\"Coolio_49\" required />\n\n                    <h3>Enter the game ID you want to join</h3>\n                    <input type=\"text\"\n                        className=\"join__input\"\n                        name=\"connectionID\"\n                        value={connectionID}\n                        onChange={handleConnectionInput}\n                        placeholder=\"y17kjteeff000000\" required />\n\n                </div>\n            </div>\n            <button className=\"join__btn\" onClick={() => {\n                props.handleConnection(connectionID);\n                props.updateUsername(userName);\n                props.pushLocation('/player/instructions');\n            }}>\n                <p className=\"join__anchor_txt\">Game Time!</p>\n            </button>\n        </div >\n    )\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Peer from 'peerjs';\n\nimport history from '../../History.js';\nimport Questions from '../Questions';\nimport Results from '../Results';\nimport LeaderBoard from '../LeaderBoard';\nimport Instructions from '../Instructions';\nimport Join from './Join';\n\nimport './index.css';\n\n/**\n *\n *\n * @class Host\n * @extends {Component}\n */\nclass Player extends Component {\n\n  /**\n  * @property { Object } me - User in this instance of game.\n  * @property { Array } users - Array of user objects.\n  * @property { Array } questions - Array of questions and answers.\n  * @property { Array }  answers - An array of possible answers.\n  * @property { Number } currentQ - Index of current question.\n  * @property { Number } time - How many seconds to set timer.\n  * @property { String } chosenAnswer - String holding chosen answer.\n  *\n  */\n  state = {\n    peer: new Peer(null, {\n      debug: 2\n    }),\n    id: '',\n    me: {\n      userName: \"\",\n      myScore: 0\n    },\n    users: {},\n    questions: [],\n    currentQ: 0,\n    time: 10,\n    isConnected: false,\n    input: '',\n    conn: '',\n    whichGame: ''\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  initialize = () => {\n\n    this.state.peer.on('open', (id) => {\n      console.log(\"ID: \" + this.state.peer.id);\n      this.setState({ id })\n    });\n\n    this.state.peer.on('disconnected', () => {\n      //handle connection message\n      console.log(\"Connection lost. Please reconnect\");\n      this.state.peer.reconnect();\n    });\n\n    this.state.peer.on('close', () => {\n      this.setState({ conn: null });\n      console.log('Connection destroyed');\n    });\n\n    this.state.peer.on('error', (err) => {\n      console.log(err);\n    })\n  }\n\n\n\n  loadQuestions(whichGame) {\n    return fetch(`/api/questions/${whichGame}`)\n      .then(res => {\n        if (!res.ok) {\n          return Promise.reject(res.statusText);\n        }\n        return res.json();\n      })\n      .then(data =>\n        this.setState({\n          questions: data.questions\n        })\n      )\n      .catch(err =>\n        console.log(err)\n      );\n  }\n\n  /* PUSH URL */\n  /**\n   * @function pushLocation\n   * @arg {String}\n   * @description [Takes in a string that will be pushed as a URL path in the history stack, making the app 'navigate' to that URL and mount any corrosponding components.]\n   */\n  pushLocation = (path) => {\n    history.push(`${path}`);\n  };\n\n  /* Increment Current Q */\n  /**\n   * @function incrementQ\n   * @description [Takes in number representing index of current question in questions array and adds one, in order to get next question in array.]\n   */\n  incrementQ = () => {\n    let cQ = this.state.currentQ;\n    this.setState({ currentQ: (cQ + 1) })\n  }\n\n  /* Set Game */\n  /**\n   * @function setGame\n   * @description [Takes in questions and answers from game selected in Games component and places them in the questions array in state.]\n   */\n  setGame = (game) => {\n    this.setState({ questions: game.questions });\n  }\n\n\n  /**\n   * @method sendAnswer - Function used to send computed answer to the Host.\n   *\n   * @memberof Questions\n   */\n  sendAnswer = (correct, answer, localScore) => {\n    //Send data to Host\n    this.sendChosenAnswer(correct, answer, localScore);\n  }\n\n  /**\n   * @method sendChosenAnswer - Function used to send slected answer to the Host.\n   */\n\n  sendChosenAnswer = (correct, answer, localScore) => {\n    if (this.state.conn.open) {\n      let msg = { individualResults: this.state.me };\n      this.state.conn.send(msg);\n      console.log(\"Sent: \" + msg);\n    }\n  }\n\n  handleConnection = (id) => {\n    let conn = this.state.peer.connect(id, {\n      reliable: true\n    });\n\n    this.setState({ conn, isConnected: true }, () => {\n      this.finishConnections();\n    })\n\n\n  }\n\n  finishConnections = () => {\n\n    this.state.conn.on('open', () => {\n      console.log(\"Connected to: \" + this.state.conn.peer);\n      let firstMe = { initialMe: this.state.me };\n      this.state.conn.send(firstMe);\n    });\n\n    this.state.conn.on('data', (data) => {\n      console.log(data);\n      this.handleReceivedData(data);\n    });\n\n    this.state.conn.on('close', () => {\n      this.state.peer.destroy();\n      console.log(\"Connection closed\");\n    });\n\n  }\n\n  handleReceivedData = (data) => {\n    switch (data) {\n      case \"start\":\n        this.pushLocation(\"/player/questions\");\n        break;\n      case \"go Leaderboard\":\n        this.pushLocation(\"/player/leaderboard\");\n        break;\n      case \"go Next Question\":\n        this.pushLocation(\"/player/questions\");\n        break;\n      case \"Game Over\":\n        this.pushLocation(\"/player/results\");\n        break;\n      case \"Rematch\":\n        console.log(\"handle rematch here\");\n        break;\n      default:\n        this.catchOthers(data);\n        console.log(data);\n        break;\n    };\n  }\n\n  /**\n   * @method catchOthers - Function used to receive score/results from host and update them\n   *\n   *\n   */\n\n  catchOthers = (data) => {\n\n    if (data.usersObject) {\n      this.updateUsersObject(data);\n    } else if (data.whichGame) {\n      let whichGame = data.whichGame\n      this.loadQuestions(whichGame);\n    }\n  }\n\n  updateUsersObject = (data) => {\n    this.setState({ users: data.usersObject })\n  }\n\n  updateUsername = (myName) => {\n    let obj = { userName: myName, myScore: 0 };\n    this.setState({ me: obj });\n  }\n\n  updateMyScore = (score) => {\n    var obj = { myScore: score, userName: this.state.me.userName };\n    this.setState({ me: obj });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <section className=\"player-header\">\n          {\n            this.state.me.userName ?\n              <h3> User Name: <span className=\"orange\">\n                {this.state.me.userName}\n              </span></h3> :\n              <h3><span className=\"orange\">Enter a User Name</span></h3>\n\n\n          }\n        </section>\n\n\n        < br />\n        <Switch>\n\n          <Route path=\"/player/join\" render={() => <Join pushLocation={this.pushLocation} updateUsername={this.updateUsername} handleConnection={this.handleConnection} />} />\n\n          <Route path=\"/player/instructions\"\n            render={() => <Instructions\n              users={this.state.users} />} />\n\n          <Route path=\"/player/questions\"\n            render={(props) =>\n              <Questions {...props}\n                question={this.state.questions[this.state.currentQ]}\n                onQ={this.state.currentQ + 1}\n                totalQ={this.state.questions.length}\n                handleIncrementQ={this.incrementQ}\n                pushLocation={this.pushLocation}\n                sendAnswer={this.sendAnswer}\n                updateMyScore={this.updateMyScore}\n                myScore={this.state.me.myScore}\n                updateHost={() => {}}\n              />\n            } />\n\n          <Route path=\"/player/leaderboard\"\n            render={(props) =>\n              <LeaderBoard {...props}\n                users={this.state.users}\n                handleIncrementQ={this.incrementQ} />\n            } />\n\n          <Route path=\"/player/results\"\n            render={(props) =>\n              <Results {...props}\n                users={this.state.users} />\n            } />\n\n        </Switch>\n      </div >\n\n    )\n  }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n//Stylesheets\nimport './App.css';\n\n//Components\nimport Results from './components/Results';\nimport Questions from './components/Questions';\nimport LeaderBoard from './components/LeaderBoard';\nimport Landing from './components/Landing';\nimport Instructions from './components/Instructions';\nimport Games from './components/Games';\nimport Nav from './components/Nav';\nimport Host from './components/Host';\nimport Player from './components/Player';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div id=\"top-level-container\">\n        <Nav />\n\n        <Switch>\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/results\" component={Results} />\n          <Route path=\"/games\" component={Games} />\n          <Route path=\"/instructions\" component={Instructions} />\n          <Route path=\"/questions\" component={Questions} />\n          <Route path=\"/leaderBoard\" component={LeaderBoard} />\n          <Route path=\"/host\" component={Host} />\n          <Route path=\"/player\" component={Player} />\n\n        </Switch>\n\n        <footer className=\"fbc pm0\">\n          <ul className=\"footer-list pm0\">\n              <li><a href=\"https://github.com/chingu-voyages/v8-chimeras-team-01\" target=\"_blank\" rel=\"noopener noreferrer\">Source Code</a></li>\n          </ul>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport history from './History.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}