{"ast":null,"code":"import _regeneratorRuntime from \"/media/luisthecoder/Code/v8-chimeras-team-01/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/luisthecoder/Code/v8-chimeras-team-01/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/media/luisthecoder/Code/v8-chimeras-team-01/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/luisthecoder/Code/v8-chimeras-team-01/client/src/components/Games/Games.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nexport default function Games(_ref) {\n  var showGames = _ref.showGames,\n      handleSetGame = _ref.handleSetGame,\n      pushLocation = _ref.pushLocation,\n      setGameTwo = _ref.setGameTwo;\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  var _useState = useState([{\n    id: \"1\",\n    description: \"\",\n    image: \"\",\n    category: \"\",\n    questions: []\n  }, {\n    id: \"2\",\n    description: \"\",\n    image: \"\",\n    category: \"\",\n    questions: []\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      gameList = _useState2[0],\n      setgameList = _useState2[1];\n\n  useEffect(function () {\n    function fetchQuestions() {\n      return _fetchQuestions.apply(this, arguments);\n    }\n\n    function _fetchQuestions() {\n      _fetchQuestions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api/questions');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context.sent;\n                console.log(data[1]);\n                return _context.abrupt(\"return\", setgameList(data));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchQuestions.apply(this, arguments);\n    }\n\n    fetchQuestions();\n  }, []);\n\n  var handleSelectGame = function handleSelectGame(game) {\n    handleSetGame(game);\n    pushLocation(\"/host/instructions\");\n  };\n\n  return React.createElement(\"section\", {\n    className: !!showGames ? 'games show-games' : \"games\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Choose your challenge\"), React.createElement(\"div\", {\n    className: \"games-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, gameList.map(function (game) {\n    return React.createElement(\"article\", {\n      className: \"game-tile pointy\",\n      key: game.id,\n      onClick: function onClick() {\n        handleSelectGame(game);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gt-image fbc pm0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"game-image\",\n      src: game.image,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"gt-description pm0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, game.category), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, game.description)));\n  })));\n}","map":{"version":3,"sources":["/media/luisthecoder/Code/v8-chimeras-team-01/client/src/components/Games/Games.js"],"names":["React","useState","useEffect","Games","showGames","handleSetGame","pushLocation","setGameTwo","id","description","image","category","questions","gameList","setgameList","fetchQuestions","fetch","response","json","data","console","log","handleSelectGame","game","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAEA,eAAe,SAASC,KAAT,OAAuE;AAAA,MAAtDC,SAAsD,QAAtDA,SAAsD;AAAA,MAA3CC,aAA2C,QAA3CA,aAA2C;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEpF;;;;AAFoF,kBAMpDN,QAAQ,CAAC,CACvC;AACEO,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,WAAW,EAAE,EAFf;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,QAAQ,EAAE,EAJZ;AAKEC,IAAAA,SAAS,EAAE;AALb,GADuC,EAQvC;AACEJ,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,WAAW,EAAE,EAFf;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,QAAQ,EAAE,EAJZ;AAKEC,IAAAA,SAAS,EAAE;AALb,GARuC,CAAD,CAN4C;AAAA;AAAA,MAM7EC,QAN6E;AAAA,MAMnEC,WANmE;;AAuBpFZ,EAAAA,SAAS,CAAE,YAAM;AAAA,aACAa,cADA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBC,KAAK,CAAC,gBAAD,CAD5B;;AAAA;AACMC,gBAAAA,QADN;AAAA;AAAA,uBAEmBA,QAAQ,CAACC,IAAT,EAFnB;;AAAA;AAEMC,gBAAAA,IAFN;AAGAC,gBAAAA,OAAO,CAACC,GAAR,CAAaF,IAAI,CAAC,CAAD,CAAjB;AAHA,iDAKOL,WAAW,CAACK,IAAD,CALlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADe;AAAA;AAAA;;AAQfJ,IAAAA,cAAc;AACf,GATQ,EASN,EATM,CAAT;;AAWA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjClB,IAAAA,aAAa,CAACkB,IAAD,CAAb;AACAjB,IAAAA,YAAY,CAAC,oBAAD,CAAZ;AACD,GAHD;;AAKA,SACE;AAAS,IAAA,SAAS,EAAE,CAAC,CAACF,SAAF,GAAc,kBAAd,GAAmC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCS,QAAQ,CAACW,GAAT,CAAa,UAAAD,IAAI;AAAA,WACd;AAAS,MAAA,SAAS,EAAC,kBAAnB;AACS,MAAA,GAAG,EAAEA,IAAI,CAACf,EADnB;AAES,MAAA,OAAO,EAAE,mBAAM;AAACc,QAAAA,gBAAgB,CAACC,IAAD,CAAhB;AAAuB,OAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA2B,MAAA,GAAG,EAAEA,IAAI,CAACb,KAArC;AAA4C,MAAA,GAAG,EAAC,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CAHF,EAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,IAAI,CAACZ,QAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIY,IAAI,CAACd,WAAT,CAFF,CAJF,CADc;AAAA,GAAjB,CADD,CAFF,CADF;AAkBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nexport default function Games({ showGames, handleSetGame, pushLocation, setGameTwo }) {\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  const [gameList, setgameList] = useState([\n    {\n      id: \"1\",\n      description: \"\",\n      image: \"\",\n      category: \"\",\n      questions: [],\n    },\n    {\n      id: \"2\",\n      description: \"\",\n      image: \"\",\n      category: \"\",\n      questions: [],\n    },\n  ]);\n\n  useEffect( () => {\n    async function fetchQuestions() {\n    const response = await fetch('/api/questions');\n    const data = await response.json();\n    console.log( data[1]);\n\n    return setgameList(data);\n  }\n    fetchQuestions();\n  }, []);\n\n  const handleSelectGame = (game) => {\n    handleSetGame(game);\n    pushLocation(\"/host/instructions\");\n  }\n\n  return (\n    <section className={!!showGames ? 'games show-games' : \"games\"} >\n      <h1>Choose your challenge</h1>\n      <div className=\"games-container\">\n      {gameList.map(game => (\n          <article className=\"game-tile pointy\"\n                   key={game.id}\n                   onClick={() => {handleSelectGame(game)}} >\n            <div className=\"gt-image fbc pm0\"><img className=\"game-image\"src={game.image} alt=\"\"></img></div>\n            <div className=\"gt-description pm0\">\n              <h4>{game.category}</h4>\n              <p>{game.description}</p>\n            </div>\n          </article>\n        ))}\n      </div>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}