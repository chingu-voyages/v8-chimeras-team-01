{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Z/Projects/WebDev/Chingu/v8-chimeras-team-01/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Z/Projects/WebDev/Chingu/v8-chimeras-team-01/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Z/Projects/WebDev/Chingu/v8-chimeras-team-01/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Z/Projects/WebDev/Chingu/v8-chimeras-team-01/client/src/components/Games/BrowseGames.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function BrowseGames(_ref) {\n  var showGames = _ref.showGames,\n      handleToggleGames = _ref.handleToggleGames;\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  var _useState = useState([{\n    id: \"\",\n    name: \"\",\n    image: React.createElement(\"i\", {\n      className: \"fas fa-stroopwafel fa-6x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }),\n    desc: \"What you know 'bout Waffles??\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      gameList = _useState2[0],\n      setgameList = _useState2[1];\n\n  useEffect(function () {\n    function fetchQuestions() {\n      return _fetchQuestions.apply(this, arguments);\n    }\n\n    function _fetchQuestions() {\n      _fetchQuestions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/api/questions');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context.sent;\n                console.log(data[0].category);\n                return _context.abrupt(\"return\", setgameList({\n                  id: data[0].id,\n                  name: data[0].category,\n                  image: React.createElement(\"i\", {\n                    className: \"fas fa-stroopwafel fa-6x\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 26\n                    },\n                    __self: this\n                  }),\n                  desc: \"What you know 'bout Waffles??\"\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      return _fetchQuestions.apply(this, arguments);\n    }\n\n    fetchQuestions();\n  }, []);\n  return React.createElement(\"section\", {\n    className: !!showGames ? 'games show-games' : \"games\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"games-close pm0 pointy\",\n    onClick: function onClick() {\n      handleToggleGames(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" X close \"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Browse Available Challenges.\"), React.createElement(\"div\", {\n    className: \"games-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"game-tile\",\n    key: gameList.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gt-image fbc pm0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, gameList.image), React.createElement(\"div\", {\n    className: \"gt-description pm0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, gameList.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, gameList.desc)))));\n}","map":{"version":3,"sources":["/Users/Z/Projects/WebDev/Chingu/v8-chimeras-team-01/client/src/components/Games/BrowseGames.js"],"names":["React","useState","useEffect","BrowseGames","showGames","handleToggleGames","id","name","image","desc","gameList","setgameList","fetchQuestions","fetch","response","json","data","console","log","category"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,WAAT,OAAuD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;;AAEpE;;;;AAFoE,kBAMpCJ,QAAQ,CAAC,CACvC;AACEK,IAAAA,EAAE,EAAE,EADN;AAEEC,IAAAA,IAAI,EAAE,EAFR;AAGEC,IAAAA,KAAK,EAAE;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADuC,CAAD,CAN4B;AAAA;AAAA,MAM7DC,QAN6D;AAAA,MAMnDC,WANmD;;AAepET,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCU,cADD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBC,KAAK,CAAC,gBAAD,CAD5B;;AAAA;AACMC,gBAAAA,QADN;AAAA;AAAA,uBAEmBA,QAAQ,CAACC,IAAT,EAFnB;;AAAA;AAEMC,gBAAAA,IAFN;AAGAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAApB;AAHA,iDAIOR,WAAW,CAAC;AACjBL,kBAAAA,EAAE,EAAEU,IAAI,CAAC,CAAD,CAAJ,CAAQV,EADK;AAEjBC,kBAAAA,IAAI,EAAES,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAFG;AAGjBX,kBAAAA,KAAK,EAAE;AAAG,oBAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHU;AAIjBC,kBAAAA,IAAI,EAAE;AAJW,iBAAD,CAJlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAYdG,IAAAA,cAAc;AACf,GAbQ,EAaN,EAbM,CAAT;AAeA,SACE;AAAS,IAAA,SAAS,EAAE,CAAC,CAACR,SAAF,GAAc,kBAAd,GAAmC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AACQ,IAAA,OAAO,EAAE,mBAAM;AAACC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB,KADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHR,EAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAA+B,IAAA,GAAG,EAAEK,QAAQ,CAACJ,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCI,QAAQ,CAACF,KAA5C,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,QAAQ,CAACH,IAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,QAAQ,CAACD,IAAb,CAFF,CAFF,CADJ,CAJF,CADF;AAgBD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function BrowseGames({ showGames, handleToggleGames }) {\n\n  /**\n   * @method [useState(gameList)]\n   * @description [Array of games available to map over and display in tiles]\n   */\n  const [gameList, setgameList] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      image: <i className=\"fas fa-stroopwafel fa-6x\"></i>,\n      desc: \"What you know 'bout Waffles??\",\n    }\n  ]);\n\n  useEffect(() => {\n    async function fetchQuestions() {\n    const response = await fetch('/api/questions');\n    const data = await response.json();\n    console.log(data[0].category);\n    return setgameList({\n      id: data[0].id,\n      name: data[0].category,\n      image: <i className=\"fas fa-stroopwafel fa-6x\"></i>,\n      desc: \"What you know 'bout Waffles??\"\n    })\n  }\n    fetchQuestions(); \n  }, []);\n\n  return (\n    <section className={!!showGames ? 'games show-games' : \"games\"} >\n      <button className=\"games-close pm0 pointy\"\n              onClick={() => {handleToggleGames(false)}}> X close </button>\n            <h1>Browse Available Challenges.</h1>\n      <div className=\"games-container\">\n          <article className=\"game-tile\" key={gameList.id} >\n            <div className=\"gt-image fbc pm0\">{gameList.image}</div>\n            <div className=\"gt-description pm0\">\n              <h4>{gameList.name}</h4>\n              <p>{gameList.desc}</p>\n            </div>\n          </article>\n      </div>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}