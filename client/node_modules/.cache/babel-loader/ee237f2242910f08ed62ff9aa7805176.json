{"ast":null,"code":"import _toConsumableArray from \"/media/luisthecoder/Code/v8-chimeras-team-01/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/media/luisthecoder/Code/v8-chimeras-team-01/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/luisthecoder/Code/v8-chimeras-team-01/client/src/components/Questions/Questions.js\";\nimport React, { useEffect, useState } from 'react';\nimport Answer from './Answer';\nimport './index.css';\nimport Loader from '../Loader';\nexport default function Questions(_ref) {\n  var updateMyScore = _ref.updateMyScore,\n      myScore = _ref.myScore,\n      sendAnswer = _ref.sendAnswer,\n      question = _ref.question,\n      onQ = _ref.onQ,\n      totalQ = _ref.totalQ,\n      handleIncrementQ = _ref.handleIncrementQ,\n      pushLocation = _ref.pushLocation,\n      playersUpdated = _ref.playersUpdated,\n      updateHost = _ref.updateHost,\n      readyLeaderBoard = _ref.readyLeaderBoard,\n      goLeaderboard = _ref.goLeaderboard;\n\n  /**\n   * [useEffect Hook]\n   * @method  timeInterval\n   * @description  [Hook to start/stop timer on mount/unmount]\n   * @return {function} [Cleans up on un-mount by clearing interval]\n   */\n  useEffect(function () {\n    var timeInterval = setInterval(function () {\n      return timer();\n    }, 1000);\n    return function () {\n      clearInterval(timeInterval);\n    };\n  });\n\n  var _useState = useState(myScore),\n      _useState2 = _slicedToArray(_useState, 2),\n      localScore = _useState2[0],\n      setLocalScore = _useState2[1];\n\n  var _useState3 = useState('wrong'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      correct = _useState4[0],\n      setCorrect = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      answer = _useState6[0],\n      setAnswer = _useState6[1];\n\n  var handleChoice = function handleChoice(event, correct, answer) {\n    preventClicks(event);\n    setCorrect(correct);\n    setAnswer(answer);\n    var updatedScore = 0;\n\n    if (correct === \"correct\") {\n      updatedScore = localScore + 5 * time;\n    } else {\n      updatedScore = localScore;\n    }\n\n    setLocalScore(updatedScore);\n    updateMyScore(updatedScore);\n  };\n  /**\n   * [time Hook]\n   * @method time\n   * @description [Hook to set initial time in timer and method to update that count]\n   */\n\n\n  var _useState7 = useState(10),\n      _useState8 = _slicedToArray(_useState7, 2),\n      time = _useState8[0],\n      setTime = _useState8[1];\n  /**\n   * [isLastQ]\n   * @param  [Holds boolean, true if this is the last quesiton in the array, false otherwise]\n   * @return {Boolean}\n   */\n\n\n  var isLastQ = onQ === totalQ ? true : false;\n  /**\n   * @function highlightCorrect [Highlights Answer marked as correct]\n   */\n\n  var highlightCorrect = function highlightCorrect() {\n    var correct = document.querySelector('.correct');\n    correct.classList.add('highlight');\n  };\n  /**\n   * @function timer [Decrements the time in state and pushes to Leaderboard URL except last question, then pushes to Results URL]\n   */\n\n\n  var timer = function timer() {\n    if (time === 0) {\n      var newTime = time - 1;\n      setTime(newTime); // Highlighting the correct answer\n\n      highlightCorrect(); // send answers to host regardless\n\n      sendAnswer(correct, answer, localScore);\n    } else if (time === -15) {\n      updateHost();\n\n      var _newTime = time - 1;\n\n      setTime(_newTime);\n    } else {\n      var _newTime2 = time - 1;\n\n      setTime(_newTime2);\n    }\n  };\n  /* Once user clicks answer, prevent more answers from being chosen */\n\n  /**\n   * @function preventClicks [finds all Answers and prevents further clicks]\n   */\n\n\n  var preventClicks = function preventClicks(e) {\n    e.target.classList.add('selected');\n    var allAnswers = document.getElementsByClassName('box');\n\n    _toConsumableArray(allAnswers).forEach(function (element) {\n      return element.classList.add('no-clicks');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    id: \"questions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"questions__title text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Question \", onQ, \" of \", totalQ, \" \"), React.createElement(\"div\", {\n    className: \"image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, time <= 0 ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    className: \"outline image-question\",\n    alt: \"of question\",\n    src: \"https://picsum.photos/200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"question__timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Timer \", time))), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"question__display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, question.q)), React.createElement(\"div\", {\n    className: \"answers-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, question.a.map(function (answer, i) {\n    if (answer !== question.c) {\n      return React.createElement(Answer, {\n        correct: 'wrong',\n        answer: answer,\n        handleChoice: handleChoice,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Answer, {\n        correct: 'correct',\n        answer: answer,\n        handleChoice: handleChoice,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n  })));\n}","map":{"version":3,"sources":["/media/luisthecoder/Code/v8-chimeras-team-01/client/src/components/Questions/Questions.js"],"names":["React","useEffect","useState","Answer","Loader","Questions","updateMyScore","myScore","sendAnswer","question","onQ","totalQ","handleIncrementQ","pushLocation","playersUpdated","updateHost","readyLeaderBoard","goLeaderboard","timeInterval","setInterval","timer","clearInterval","localScore","setLocalScore","correct","setCorrect","answer","setAnswer","handleChoice","event","preventClicks","updatedScore","time","setTime","isLastQ","highlightCorrect","document","querySelector","classList","add","newTime","e","target","allAnswers","getElementsByClassName","forEach","element","q","a","map","i","c"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Answer from './Answer';\nimport './index.css';\nimport Loader from '../Loader';\n\nexport default function Questions({ updateMyScore, myScore, sendAnswer, question, onQ, totalQ, handleIncrementQ, pushLocation, playersUpdated, updateHost, readyLeaderBoard, goLeaderboard }) {\n\n\n  /**\n   * [useEffect Hook]\n   * @method  timeInterval\n   * @description  [Hook to start/stop timer on mount/unmount]\n   * @return {function} [Cleans up on un-mount by clearing interval]\n   */\n  useEffect(() => {\n    const timeInterval = setInterval(() => timer(), 1000)\n    return () => {\n      clearInterval(timeInterval);\n    }\n  })\n\n  const [localScore, setLocalScore] = useState(myScore);\n  const [correct, setCorrect] = useState('wrong');\n  const [answer, setAnswer] = useState('');\n\n\n  const handleChoice = (event, correct, answer) => {\n    preventClicks(event);\n    setCorrect(correct);\n    setAnswer(answer);\n    let updatedScore = 0\n    if (correct === \"correct\") {\n      updatedScore = localScore + (5 * time);\n    } else {\n      updatedScore = localScore;\n    }\n    setLocalScore(updatedScore);\n    updateMyScore(updatedScore)\n  }\n\n  /**\n   * [time Hook]\n   * @method time\n   * @description [Hook to set initial time in timer and method to update that count]\n   */\n  const [time, setTime] = useState(10);\n\n\n  /**\n   * [isLastQ]\n   * @param  [Holds boolean, true if this is the last quesiton in the array, false otherwise]\n   * @return {Boolean}\n   */\n  const isLastQ = (onQ === totalQ) ? true : false;\n\n  /**\n   * @function highlightCorrect [Highlights Answer marked as correct]\n   */\n  const highlightCorrect = () => {\n    let correct = document.querySelector('.correct');\n    correct.classList.add('highlight');\n  }\n\n\n  /**\n   * @function timer [Decrements the time in state and pushes to Leaderboard URL except last question, then pushes to Results URL]\n   */\n  const timer = () => {\n    if (time === 0) {\n      let newTime = (time - 1);\n      setTime(newTime);\n\n      // Highlighting the correct answer\n      highlightCorrect();\n\n      // send answers to host regardless\n      sendAnswer(correct, answer, localScore)\n\n    } else if (time === -15) {\n      updateHost();\n\n      let newTime = (time - 1);\n      setTime(newTime);\n\n    } else {\n      let newTime = (time - 1);\n      setTime(newTime);\n    }\n\n  }\n\n  /* Once user clicks answer, prevent more answers from being chosen */\n  /**\n   * @function preventClicks [finds all Answers and prevents further clicks]\n   */\n  const preventClicks = (e) => {\n    e.target.classList.add('selected');\n\n    let allAnswers = document.getElementsByClassName('box');\n    [...allAnswers].forEach(element => element.classList.add('no-clicks'));\n  }\n\n  return (\n\n    <div id=\"questions\">\n      <h1 className=\"questions__title text-center\">Question {onQ} of {totalQ} </h1>\n\n      <div className='image-wrapper'>\n        {time <= 0 ? <Loader /> :\n          <>\n            <img className='outline image-question' alt='of question' src='https://picsum.photos/200'></img>\n            <div className=\"question__timer\">Timer {time}</div>\n          </>\n\n        }\n      </div>\n\n      <div className='text-center'>\n        <h2 className='question__display'>{question.q}</h2>\n      </div>\n\n      <div className='answers-wrapper'>\n        {\n          question.a.map((answer, i) => {\n            if (answer !== question.c) {\n              return <Answer correct={'wrong'}\n                answer={answer}\n                handleChoice={handleChoice}\n                key={i} />;\n            } else {\n              return <Answer correct={'correct'}\n                answer={answer}\n                handleChoice={handleChoice}\n                key={i} />;\n            }\n          })\n        }\n      </div>\n\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}